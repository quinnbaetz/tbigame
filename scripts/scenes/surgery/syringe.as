import flash.display.MovieClip;import flash.geom.Point;(function(){    var mX = 300;	var mY = 150;	var syringeMarks = new MovieClip();	syringeMarks.x = 0;	syringeMarks.y = 0;	stage.addChild(syringeMarks);	syringeMarks.graphics.lineStyle(5, 0xFF0000);	var pOutline =  addImage("markerOutline", mX-10, mY-12);	pOutline.alpha = .0;	var pSyringeArm = new needleHand();	pSyringeArm.y = HEIGHT;	stage.addChild(pSyringeArm);		pSyringeArm.gotoAndStop(0);		toolbox.bringForward();		//stage.setChildIndex(stage.getChildByName(tbi.userLine.name), 1);		var mousePos = {x: WIDTH, y: HEIGHT};	var surgeonDialog = function(callback){		displayMessages(_('syringe directions'), null, null, callback, false, "surgeonFace");	};		var surgeonDialogError = function(callback){		displayMessages(_('stay close syringe'), null, null, callback, false, "surgeonFace");	};			var surgeonDialogFinished = function(callback){		var messages;		var failed = false;		for(var pt1 in points){			for(var pt2 in points){				var dist = hypot(points[pt1].x-points[pt2].x,points[pt1].y-points[pt2].y);				if(pt1 !== pt2 && dist<60){					failed = true;					clock.reduceAngle(20);				}			}		}				if(failed){			displayMessages(_('syringe take over'), null, null, callback, false, "surgeonFace");		}else{			callback();		}					}		var removeArm = function(callback){		var tweens = new Array();		var waiter = null;				tweens.push(createTween(syringeMarks, "alpha", None.easeInOut, 0, -1, 40));		tweens.push(createTween(pSyringeArm, "y", None.easeInOut, HEIGHT, -1, 40, function(){			waiter.kill();			callback();		}));				waiter = waitOnUser(function(){			for(var i in tweens){				tweens[i].fforward();				tweens[i] = null;			}			tweens = null;		});			}		var withinBounds = function(x, y){		//return pOutline.hitTestPoint(x, y, true);		var bmapData:BitmapData = new BitmapData(pOutline.width, pOutline.height, true, 0x00000000);		bmapData.draw(pOutline, new Matrix());		var point = new Point(x,y);		var returnVal:Boolean = bmapData.hitTest(new Point(0,0), 0, pOutline.globalToLocal(point));		bmapData.dispose();		return returnVal;	}		var task = 0;	var tweenX = null;	var tweenY = null;	var points = new Array();	var getMousePos = function(){		mousePos.x = mouseX;		mousePos.y = mouseY;	}		stage.addEventListener(MouseEvent.MOUSE_MOVE, getMousePos);	surgeonDialog(function(){		var firstLoss = true;		var talking = false;		var firstHack = true;		var syringeMove = timer(25, function(){			var mousex = mousePos.x;			var mousey = mousePos.y;			if(tweenX != null){				tweenX.stop();			}			tweenX = createTween(pSyringeArm, "x", None.easeNone, mousex);						if(tweenY != null){				tweenY.stop();			}			tweenY = createTween(pSyringeArm, "y", None.easeNone, mousey-360);		}, 0);		stage.addEventListener(MouseEvent.CLICK,function(){			if(withinBounds(pSyringeArm.x,(pSyringeArm.y+360))){				syringeMarks.graphics.drawCircle(pSyringeArm.x,(pSyringeArm.y+360), 2);				points.push({x:pSyringeArm.x,y:pSyringeArm.y+360});				pSyringeArm.nextFrame();				if(points.length<5){					return;				}				syringeMove.stop();				syringeMove = null;				stage.removeEventListener(MouseEvent.CLICK, arguments.callee);				stage.removeEventListener(MouseEvent.MOUSE_MOVE, getMousePos);				talking = true;				firstHack = true;				surgeonDialogFinished(function(){					talking = false;					if(firstHack == false){						//userLine.alpha = 0;						remove(tbi.userLine);						tbi.userLine = null;						gotoAndStop("Scene_SurgeryRoom");					}				});								removeArm(function(){					remove(pOutline);					remove(pSyringeArm);					remove(syringeMarks);					firstHack = false;					if(talking == false){						remove(tbi.userLine);						tbi.userLine = null;						gotoAndStop("Scene_SurgeryRoom");					}				});			}else{				talking = true;				surgeonDialogError(function(){					if(firstLoss){						clock.reduceAngle(20);						firstLoss = false;					}					talking = false;					firstHack = true;				});			}		});			});})();