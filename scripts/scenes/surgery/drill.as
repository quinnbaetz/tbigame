import flash.display.MovieClip;import flash.geom.Point;(function(){ 	var cutHoles = new xholes();	cutHoles.x = 307;	cutHoles.y = 190;	stage.addChild(cutHoles); 			var holes = new drilledHoles();	holes.x = cutHoles.x;	holes.y = cutHoles.y;	stage.addChild(holes);	for(var i = 1; i<5; i++){		cutHoles["x"+i].alpha = 0;		createTween(cutHoles["x"+i], "alpha", None.easeInOut, .8, -1, 100);		holes["h"+i].visible = false;		holes["h"+i].alpha = 0;	}	trace(WIDTH);	tbi.pDrillArm = new drillArm();	stage.addChild(tbi.pDrillArm);	tbi.pDrillArm.x = WIDTH;	tbi.pDrillArm.gotoAndStop(1);		toolbox.bringForward();		var sugeonDialogWrong = function(callback){		var messages = new Array("Be careful, the placement of these keyholes is critical for the success of the surgery");		displayMessages(messages, null, null, callback, false, "surgeonFace");	}	var sugeonDialogConnect = function(callback){		var messages = new Array("Now, slowly use the drill to connect the keyholes.");		displayMessages(messages, 30, 300, callback, false, "surgeonFace");	}	var tweenX = null;	var tweenY = null;	var mousePos = {x: mouseX, y: mouseY};	var getMousePos = function(){		mousePos.x = mouseX;		mousePos.y = mouseY;	}		stage.addEventListener(MouseEvent.MOUSE_MOVE, getMousePos);	var clipHandMove = timer(25, function(){		var mousex = mousePos.x;		var mousey = mousePos.y;		if(tweenX != null){			tweenX.stop();		}		tweenX = createTween(tbi.pDrillArm, "x", None.easeInOut, mousex+65);				if(tweenY != null){			tweenY.stop();		}		tweenY = createTween(tbi.pDrillArm, "y", None.easeInOut, mousey-tbi.pDrillArm.height+40);	}, 0);	var holeCount = 0;	var talking = false;	stage.addEventListener(MouseEvent.MOUSE_DOWN,function(){		var callee = arguments.callee;		mousePos.x = mouseX;		mousePos.y = mouseY;		if(talking){			return;		}		var oldCount = holeCount;		for(var i = 1; i<5; i++){			var myX = cutHoles["x"+i];			var myHole = holes["h"+i];			if(myHole.visible !== false){				continue;			}			var xPos = {x: (myX.x+myX.width/2)+cutHoles.x, y: (myX.y+myX.height/2)+cutHoles.y};			trace("mousex:", mousePos.x, " mousey:", mousePos.y);			trace(i, "xPosX:", xPos.x, " xPosY:", xPos.y);			var h = hypot(mousePos.x-xPos.x, mousePos.y-xPos.y);			if(h < 20){				createTween(myX, "alpha", None.easeInOut, 0, -1, 100);				myHole.visible = true;				createTween(myHole, "alpha", None.easeInOut, 1, -1, 100);				holeCount++;			}			//cutHoles["x"+i].alpha = 0;			//createTween(cutHoles["x"+i], "alpha", None.easeInOut, .8, -1, 100)			//holes["h"+i].alpha = 0;		}		if(oldCount === holeCount){			clock.reduceAngle(20);			talking = true;			sugeonDialogWrong(function(){				talking = false;  			})		}		if(holeCount >= 4){			stage.removeEventListener(MouseEvent.MOUSE_DOWN, callee);			stage.removeEventListener(MouseEvent.MOUSE_MOVE, getMousePos);			sugeonDialogConnect();			stage.removeChild(cutHoles);			clipHandMove.stop();			include "drillConnect.as";		}				/*pClipArm.gotoAndStop(1);   		var closest = null;		var dist = 100000000;				for(var i in clipNames){			var clip = tbi.rclips[clipNames[i]];			if(clip.visible === true){				continue;			}			var clipPos = {x: (clip.x)+418, y: (clip.y)+245};			var h = hypot(mousePos.x-clipPos.x, mousePos.y-clipPos.y);			trace("Mouse:", mousePos.x, ",",  mousePos.y);			trace("clip", clipNames[i], ": ", clipPos.x, ",", clipPos.y);			if(h < dist && h < 30){				dist = h;				closest = clipNames[i];			}		}		if(closest !== null){			clipCount++;			tbi.rclips[closest].visible = true;		}		if(clipCount === 12){			clipHandMove.stop();			clipHandMove = null;			stage.removeEventListener(MouseEvent.MOUSE_UP, arguments.callee);			stage.removeEventListener(MouseEvent.MOUSE_MOVE, getMousePos);			removeArm(function(){				remove(pClipArm);				lastFrame = -1;				gotoAndStop("Scene_SurgeryPatient");			});		}*/	});})();